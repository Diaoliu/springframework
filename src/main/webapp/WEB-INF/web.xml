<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
    <!-- UTF 8 encoding -->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- loading application context at booting servlet container -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!-- spring application context container, separated from servlet context -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <!-- default path: /WEB-INF/applicationContext.xml, if param-value is empty -->
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>
    <!-- Central dispatcher for HTTP request handlers/controllers,
        e.g. for web UI controllers or HTTP-based remote service exporters.
        Dispatches to registered handlers for processing a web request,
        providing convenient mapping and exception handling facilities.  -->
    <servlet>
        <servlet-name>DispatcherServlet</servlet-name>
        <!--DispatcherServlet will search configuration file at booting time to generate beans -->
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!-- each DispatcherServlet has its own context -->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <!--1. empty, use default path: /WEB-INF/<servlet-name>-servlet.xml -->
            <!--2. <param-value>/WEB-INF/classes/dispatcher-servlet.xml</param-value> -->
            <!--3. <param-value>classpath*:dispatcher-servlet.xml</param-value> -->
            <!--4. use "," to separate multi configuration files-->
            <param-value>classpath:dispatcher-servlet.xml</param-value>
        </init-param>
        <!-- loading order -->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>DispatcherServlet</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <welcome-file-list>
        <welcome-file>login.html</welcome-file>
    </welcome-file-list>
    <error-page>
        <error-code>404</error-code>
        <location>/error.html</location>
    </error-page>
    <error-page>
        <exception-type>java.lang.NullPointerException</exception-type>
        <location>/error.html</location>
    </error-page>
    <session-config>
        <session-timeout>360</session-timeout>
    </session-config>
</web-app>